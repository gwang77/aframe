<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sz.internal.acm.mapper.RoleMapper">

	<resultMap id="ResultMap" type="sz.internal.acm.to.RoleTO"
		extends="sz.internal.common.base.mapper.BaseMapper.BaseResultMap">
		<result column="role" property="role" />
		<result column="app_id" property="app_id" />
		<result column="description" property="description" />
		<result column="available" property="available" />
	</resultMap>

	<insert id="insert" parameterType="sz.internal.acm.to.RoleTO"
		useGeneratedKeys="true" keyProperty="id">
		insert into tbl_acm_role (
		id,
		role,
		app_id,
		description,
		available,
		create_by,
		create_dt,
		update_by,
		update_dt
		) values (
		#{id},
		#{role},
		#{app_id},
		#{description},
		#{available},
		#{create_by},
		#{create_dt,jdbcType=TIMESTAMP},
		#{update_by},
		#{update_dt,jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="update" parameterType="sz.internal.acm.to.RoleTO">
		update tbl_acm_role set
		role = #{role},
		app_id = #{app_id},
		description = #{description},
		available = #{available},
		create_by = #{create_by},
		create_dt = #{create_dt,jdbcType=TIMESTAMP},
		update_by = #{update_by},
		update_dt = #{update_dt,jdbcType=TIMESTAMP},
		version = version + 1
		where
		id = #{id}
	</update>

	<delete id="delete" parameterType="sz.internal.acm.to.RoleTO">
		delete from tbl_acm_role
		where
		id = #{id}
	</delete>

	<select id="search" parameterType="sz.internal.acm.to.RoleTO"
		resultMap="ResultMap">
		<if test="!pagination">
			SELECT
			t.id,
			t.role,
			t.app_id,
			t.description,
			t.available,
			t.create_by,
			t.create_dt,
			t.update_by,
			t.update_dt,
			t.version
		</if>
		<if test="pagination">
			SELECT COUNT(1) AS TOTAL_SIZE
		</if>
		FROM tbl_acm_role t
		WHERE 1=1
		<if test="id != null">
			AND t.id = #{id}
		</if>
		<if test="role != null and role != ''">
			AND t.role = #{role}
		</if>
		<if test="name_like != null and name_like != ''">
			AND t.role like
			concat("%",REPLACE(REPLACE(REPLACE(REPLACE(#{name_like},"/","//"),"%","/%"),"_","/_"),"[","/["),"%") escape "/"
		</if>
		<if test="app_id != null and app_id != ''">
			AND t.app_id = #{app_id}
		</if>
		<if test="description != null and description != ''">
			AND t.description = #{description}
		</if>
		<if test="available != null and available != ''">
			AND t.available = #{available}
		</if>
		<if test="create_by != null and create_by != ''">
			AND t.create_by = #{create_by}
		</if>
		<if test="create_dt != null">
			AND t.create_dt = #{create_dt,jdbcType=TIMESTAMP}
		</if>
		<if test="update_by != null and update_by != ''">
			AND t.update_by = #{update_by}
		</if>
		<if test="update_dt != null">
			AND t.update_dt = #{update_dt,jdbcType=TIMESTAMP}
		</if>
		<if test="version != null">
			AND t.version = #{version}
		</if>
		<if test="!pagination">
			<if test="null!=sortBy and ''!=sortBy ">
				ORDER BY ${sortBy} ${sortType}
			</if>
		</if>
	</select>

	<select id="find" parameterType="sz.internal.acm.to.RoleTO"
		resultMap="ResultMap">
		SELECT
		t.id,
		t.role,
		t.app_id,
		t.description,
		t.available,
		t.create_by,
		t.create_dt,
		t.update_by,
		t.update_dt,
		t.version
		FROM tbl_acm_role t
		WHERE 1 = 1
		<if test="id != null">
			AND t.id = #{id}
		</if>
	</select>

	<select id="findAssignedToUser" resultMap="ResultMap">
		SELECT *
		FROM tbl_acm_role t
		Where 1 = 1
		<if test="user_id != null">
			AND t.id IN (SELECT role_id from tbl_acm_user_role WHERE
			user_id = #{user_id})
		</if>
		<if test="app_id != null and app_id != ''">
			AND t.app_id=#{app_id}
		</if>
	</select>

	<select id="findUnassignedToUser" resultMap="ResultMap">
		SELECT *
		FROM tbl_acm_role t
		WHERE 1 = 1
		<if test="user_id != null">
			AND t.id NOT IN (SELECT role_id from tbl_acm_user_role
			WHERE user_id = #{user_id})
		</if>
		<if test="app_id != null and app_id != ''">
			AND t.app_id=#{app_id}
		</if>
	</select>

</mapper>
