<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Realm Realize-->
    <bean id="userRealm" class="sz.internal.acm.realm.UserRealm">
        <property name="cachingEnabled" value="false"/>

    </bean>

    <bean id="userLDAPRealm" class="sz.internal.acm.realm.LdapUserRealm">
        <property name="contextFactory" ref="ldapContextFactory"/>
    </bean>

    <bean id="ldapContextFactory" class="org.apache.shiro.realm.ldap.JndiLdapContextFactory">
        <property name="url" value="${acm.ldap.server}"/>
    </bean>

    <!--userRealmCredentials is used for encrypt password, if need use it, can configure it in securityManager's property-->
    <bean id="userRealmCredentials" class="sz.internal.acm.realm.UserRealm">
        <property name="cachingEnabled" value="false"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>

    </bean>

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <!-- session ID generator -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- session Cookie Template -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/>
        <!-- 30day -->
    </bean>

    <!-- rememberMe MeManager  -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>


    <!-- Session DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- session Validation Scheduler -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- sessionManager -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--<property name="realm" ref="userRealm"/>-->
        <!--<property name="realm" ref="userRealmCredentials"/>-->
        <!--<property name="realm" ref="userLDAPRealm"/>-->
        <property name="realms">
            <list>
                <ref bean="userRealmCredentials"/>
                <ref bean="userLDAPRealm"/>
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- call SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- base on Form filter -->
    <bean id="formAuthenticationFilter" class="sz.internal.acm.shiro.filter.LoginFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/api/acm/ajaxLogin"/>
        <property name="successUrl" value="/index.html"/>
    </bean>

    <bean id="urlAccFilter" class="sz.internal.acm.shiro.filter.URLAccFilter"/>
    <bean id="apiUserFilter" class="sz.internal.acm.shiro.filter.RestAPIUserFilter"/>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="index.html#/itrust/login"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="index.html#/itrust/login"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="urlAcc" value-ref="urlAccFilter"/>
                <entry key="apiUser" value-ref="apiUserFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionSource"/>
    </bean>
    <bean id="filterChainDefinitionSource" class="sz.internal.acm.shiro.ChainDefinitionSectionPropertiesMetaSource">
        <property name="filterChainDefinitions">
            <value>
                / = anon
                /css/** = anon
                /fonts/** = anon
                /i18n/** = anon
                /image/** = anon
                /images/** = anon
                /img/** = anon
                /public/** = anon
                /scripts/** = anon
                /styles/** = anon
                /**/*.html = anon
                /api/common/code/** = anon
                /api/acm/hasPermission/** = anon
                /api/acm/loginname = anon
                /api/menu/** = anon
            </value>
        </property>
    </bean>

    <!-- Shiro life cycle process-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>